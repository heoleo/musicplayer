(function(t) { function a(a) { for (var i, c, l = a[0], r = a[1], o = a[2], p = 0, m = []; p < l.length; p++)c = l[p], Object.prototype.hasOwnProperty.call(n, c) && n[c] && m.push(n[c][0]), n[c] = 0; for (i in r)Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]); u && u(a); while (m.length)m.shift()(); return e.push.apply(e, o || []), s() } function s() { for (var t, a = 0; a < e.length; a++) { for (var s = e[a], i = !0, l = 1; l < s.length; l++) { var r = s[l]; n[r] !== 0 && (i = !1) }i && (e.splice(a--, 1), t = c(c.s = s[0])) } return t } var i = {}; var n = { app: 0 }; var e = []; function c(a) { if (i[a]) return i[a].exports; var s = i[a] = { i: a, l: !1, exports: {} }; return t[a].call(s.exports, s, s.exports, c), s.l = !0, s.exports }c.m = t, c.c = i, c.d = function(t, a, s) { c.o(t, a) || Object.defineProperty(t, a, { enumerable: !0, get: s }) }, c.r = function(t) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(t, '__esModule', { value: !0 }) }, c.t = function(t, a) { if (1 & a && (t = c(t)), 8 & a) return t; if (4 & a && typeof t === 'object' && t && t.__esModule) return t; var s = Object.create(null); if (c.r(s), Object.defineProperty(s, 'default', { enumerable: !0, value: t }), 2 & a && typeof t !== 'string') for (var i in t)c.d(s, i, function(a) { return t[a] }.bind(null, i)); return s }, c.n = function(t) { var a = t && t.__esModule ? function() { return t.default } : function() { return t }; return c.d(a, 'a', a), a }, c.o = function(t, a) { return Object.prototype.hasOwnProperty.call(t, a) }, c.p = '/'; var l = window.webpackJsonp = window.webpackJsonp || []; var r = l.push.bind(l); l.push = a, l = l.slice(); for (var o = 0; o < l.length; o++)a(l[o]); var u = r; e.push([0, 'chunk-vendors']), s() })({ 0: function(t, a, s) { t.exports = s('56d7') }, '1e7a': function(t, a) { t.exports = { svg: { $: { t: '1619598572424', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '1411', width: '200', height: '200' }, path: [{ $: { d: 'M512 938.666667C276.352 938.666667 85.333333 747.648 85.333333 512S276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667-191.018667 426.666667-426.666667 426.666667z m0-85.333334a341.333333 341.333333 0 1 0 0-682.666666 341.333333 341.333333 0 0 0 0 682.666666z m158.165333-311.168l-128 128a42.666667 42.666667 0 0 1-60.330666-60.330666L537.002667 554.666667H384a42.666667 42.666667 0 1 1 0-85.333334h153.002667l-55.168-55.168a42.666667 42.666667 0 0 1 60.330666-60.330666l128 128a42.666667 42.666667 0 0 1 0 60.330666z', fill: '#333333', 'p-id': '1412', 'data-spm-anchor-id': 'a313x.7781069.0.i0', class: '' } }] } } }, '212b': function(t, a) { t.exports = { svg: { $: { t: '1619597795017', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '1060', width: '200', height: '200' }, path: [{ $: { d: 'M872.1 739.4c0.1-1.1 0.1-2.2 0.1-3.3V98.2c0-22.1-17.9-40-40-40-6 0-11.7 1.3-16.8 3.7L420.7 178.7c-19.9 5.9-31.8 25.9-27.9 45.9v532.7c-23.7-9.5-51.2-15-80.5-15-88.9 0-160.9 50.1-160.9 112s72 112 160.9 112c74 0 136.4-34.8 155.1-82.2 3.4-5.9 5.4-12.7 5.4-20v-1.9c0.3-2.6 0.4-5.2 0.4-7.9s-0.1-5.3-0.4-7.9V246.7l319.6-94.5v501c-23.6-9.5-51.1-14.9-80.3-14.9-88.9 0-160.9 50.1-160.9 112s72 112 160.9 112S873 812.2 873 750.3c-0.1-3.7-0.4-7.3-0.9-10.9z', 'p-id': '1061' } }] } } }, '24ac': function(t, a, s) {}, '28d7': function(t, a, s) { 'use strict'; s('f678') }, '36df': function(t, a) { t.exports = { svg: { $: { t: '1619531727529', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '4351', width: '200', height: '200' }, path: [{ $: { d: 'M628.053333 628.053333a32 32 0 0 1 45.226667 0l158.72 158.634667V693.333333l0.298667-4.352A32 32 0 0 1 896 693.333333v181.333334l-0.341333 3.84a21.333333 21.333333 0 0 1-20.992 17.493333h-181.333334l-4.352-0.298667a32 32 0 0 1-27.648-31.701333l0.298667-4.352a32 32 0 0 1 31.701333-27.648h93.44l-158.72-158.72-3.114666-3.584a32 32 0 0 1 3.114666-41.642667z m-232.106666 0a32 32 0 0 1 3.114666 41.642667l-3.114666 3.584-158.72 158.72h93.44a32 32 0 0 1 31.701333 27.648l0.298667 4.352a32 32 0 0 1-27.648 31.701333L330.666667 896H149.333333a21.333333 21.333333 0 0 1-20.992-17.493333L128 874.666667v-181.333334a32 32 0 0 1 63.701333-4.352l0.298667 4.352v93.354667l158.72-158.634667a32 32 0 0 1 45.226667 0zM874.666667 128a21.333333 21.333333 0 0 1 20.992 17.493333L896 149.333333v181.333334a32 32 0 0 1-63.701333 4.352L832 330.666667V237.312L673.28 395.946667a32 32 0 0 1-48.341333-41.642667l3.114666-3.584 158.72-158.72h-93.44a32 32 0 0 1-31.701333-27.648L661.333333 160a32 32 0 0 1 27.648-31.701333L693.333333 128h181.333334zM330.666667 128l4.352 0.298667a32 32 0 0 1 27.648 31.701333l-0.298667 4.352a32 32 0 0 1-31.701333 27.648H237.226667l158.72 158.72 3.114666 3.584a32 32 0 0 1-48.341333 41.642667L192 237.312V330.666667l-0.298667 4.352A32 32 0 0 1 128 330.666667V149.333333l0.341333-3.84A21.333333 21.333333 0 0 1 149.333333 128h181.333334z', 'p-id': '4352' } }] } } }, '38c7': function(t, a, s) { 'use strict'; s('a6f6') }, '3a5b': function(t, a, s) { 'use strict'; s('aa13') }, '4ee4': function(t, a) { t.exports = { svg: { $: { t: '1619598597999', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '1672', width: '200', height: '200' }, path: [{ $: { d: 'M512 938.666667c235.648 0 426.666667-191.018667 426.666667-426.666667S747.648 85.333333 512 85.333333 85.333333 276.352 85.333333 512s191.018667 426.666667 426.666667 426.666667z m0-85.333334a341.333333 341.333333 0 1 1 0-682.666666 341.333333 341.333333 0 0 1 0 682.666666z m-158.165333-311.168l128 128a42.666667 42.666667 0 0 0 60.330666-60.330666L486.997333 554.666667H640a42.666667 42.666667 0 1 0 0-85.333334h-153.002667l55.168-55.168a42.666667 42.666667 0 0 0-60.330666-60.330666l-128 128a42.666667 42.666667 0 0 0 0 60.330666z', fill: '#333333', 'p-id': '1673' } }] } } }, '56d7': function(t, a, s) { 'use strict'; s.r(a); s('e260'), s('e6cf'), s('cca6'), s('a79d'); var i = s('2b0e'); var n = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { attrs: { id: 'app' } }, [s('top'), s('mainIndex')], 1) }; var e = []; var c = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'mainindex' }, [s('div', { staticClass: 'nav' }, [s('router-link', { attrs: { tag: 'div', to: '/discovery', 'active-class': 'myactive' } }, [s('icon', { staticClass: 'svg', attrs: { name: 'discovery', w: '21px', h: '21px' } }), t._v('发现音乐')], 1), s('router-link', { attrs: { tag: 'div', to: '/recommand', 'active-class': 'myactive' } }, [s('icon', { staticClass: 'svg', attrs: { name: 'command', w: '21px', h: '21px' } }), t._v('推荐歌单')], 1), s('router-link', { attrs: { tag: 'div', to: '/newmusic', 'active-class': 'myactive' } }, [s('icon', { staticClass: 'svg', attrs: { name: 'newmusic', w: '21px', h: '21px' } }), t._v('最新音乐')], 1), s('router-link', { attrs: { tag: 'div', to: '/newmv', 'active-class': 'myactive' } }, [s('icon', { staticClass: 'svg', attrs: { name: 'newmv', w: '21px', h: '21px' } }), t._v('最新MV')], 1)], 1), s('div', { staticClass: 'main' }, [s('router-view')], 1), s('div', { staticClass: 'player' }, [s('audio', { attrs: { controls: 'controls', loop: 'loop', src: t.musicUrl, autoplay: '' } })])]) }; var l = []; var r = { data: function() { return { musicUrl: '' } } }; var o = r; var u = (s('fb97'), s('2877')); var p = Object(u.a)(o, c, l, !1, null, null, null); var m = p.exports; var d = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'top-container' }, [s('div', { staticClass: 'redcircle' }, [s('icon', { staticClass: 'homesvg', attrs: { name: 'home', w: '18px', h: '18px' } })], 1), s('div', { staticClass: 'yellowcircle' }, [s('icon', { staticClass: 'loginsvg', attrs: { name: 'login', w: '16px', h: '16px' } })], 1), s('div', { staticClass: 'greencircle' }, [s('icon', { staticClass: 'fullsvg', attrs: { name: 'fullScreen', w: '16px', h: '16px' } })], 1), s('icon', { staticClass: 'backwardsvg', attrs: { name: 'backward', w: '45px', h: '45px' }, nativeOn: { click: function(a) { return t.backward() } } }), s('icon', { staticClass: 'forwardsvg', attrs: { name: 'forward', w: '45px', h: '45px' }, nativeOn: { click: function(a) { return t.forward() } } }), s('el-input', { attrs: { placeholder: '请输入内容', clearable: '', 'prefix-icon': 'el-icon-search', size: 'small' }, nativeOn: { keyup: function(a) { return !a.type.indexOf('key') && t._k(a.keyCode, 'enter', 13, a.key, 'Enter') ? null : t.toSearch(a) } }, model: { value: t.songName, callback: function(a) { t.songName = a }, expression: 'songName' } })], 1) }; var v = []; var h = { data: function() { return { songName: '' } }, methods: { toSearch: function() { this.songName !== '' && this.$router.push({ path: '/result', query: { keywords: this.songName } }) }, backward: function() { history.back() }, forward: function() { history.forward() } } }; var f = h; var C = (s('bece'), Object(u.a)(f, d, v, !1, null, null, null)); var g = C.exports; var _ = { components: { mainIndex: m, top: g } }; var y = _; var w = (s('5c0b'), Object(u.a)(y, n, e, !1, null, null, null)); var b = w.exports; var k = s('8c4f'); var x = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'discovery-container' }, [s('el-carousel', { attrs: { interval: 4e3, type: 'card', height: '230px', arrow: 'never' } }, t._l(t.banners, function(a) { return s('el-carousel-item', { key: a.id, staticClass: 'llj' }, [s('img', { attrs: { src: a.imageUrl } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '60px', h: '60px' }, nativeOn: { click: function(s) { return t.playMusic(a.id) } } })], 1) }), 1), s('div', { staticClass: 'recommand' }, [s('h3', { staticClass: 'title' }, [t._v('推荐歌单')]), s('div', { staticClass: 'items' }, t._l(t.list, function(a) { return s('div', { key: a.id, staticClass: 'item' }, [s('div', { staticClass: 'img-wrap' }, [s('div', { staticClass: 'desc-wrap' }, [s('span', { staticClass: 'desc' }, [t._v(t._s(a.copywriter))])]), s('img', { attrs: { src: a.picUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' }, nativeOn: { click: function(s) { return t.toPlaylist(a.id) } } })], 1), s('p', { staticClass: 'name' }, [t._v(t._s(a.name))])]) }), 0)]), s('div', { staticClass: 'news' }, [s('h3', { staticClass: 'title' }, [t._v('最新音乐')]), s('div', { staticClass: 'items' }, t._l(t.news, function(a) { return s('div', { key: a.id, staticClass: 'item' }, [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.picUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '30px', h: '30px' }, nativeOn: { click: function(s) { return t.playMusic(a.id) } } })], 1), s('div', { staticClass: 'song-wrap' }, [s('div', { staticClass: 'song-name' }, [t._v(' ' + t._s(a.name) + ' ')]), s('div', { staticClass: 'singer' }, [t._v(' ' + t._s(a.artists[0].name) + ' ')])])]) }), 0)]), s('div', { staticClass: 'mvs' }, [s('h3', { staticClass: 'title' }, [t._v('推荐MV')]), s('div', { staticClass: 'items' }, t._l(t.mvs, function(a) { return s('div', { key: a.id, staticClass: 'item', on: { click: function(s) { return t.toMv(a.id) } } }, [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.picUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' } }), s('div', { staticClass: 'num-wrap' }, [s('icon', { staticClass: 'playcount', attrs: { name: 'playcount', w: '15px', h: '15px' } }), s('div', { staticClass: 'num' }, [t._v(' ' + t._s(a.playCount) + ' ')])], 1)], 1), s('div', { staticClass: 'info-wrap' }, [s('div', { staticClass: 'name' }, [t._v(' ' + t._s(a.copywriter) + ' ')]), s('div', { staticClass: 'singer' }, [t._v(' ' + t._s(a.artists[0].name) + ' ')])])]) }), 0)])], 1) }; var $ = []; var U = (s('d81d'), s('b0c0'), s('73ef')); var M = s.n(U); var I = { data: function() { return { banners: [], list: [], news: [], mvs: [] } }, methods: { playMusic: function(t) { var a = this; M()({ url: 'https://autumnfish.cn/song/url', method: 'get', params: { id: t } }).then(function(t) { var s = t.data.data[0].url; a.$parent.musicUrl = s }) }, toPlaylist: function(t) { this.$router.push('/playlist?id='.concat(t)) }, toMv: function(t) { this.$router.push('/mv?id='.concat(t)) } }, created: function() { var t = this; M()({ url: 'https://autumnfish.cn/banner', method: 'get' }).then(function(a) { console.log(a.data.banners); var s = a.data.banners.map(function(t) { return { imageUrl: t.imageUrl, id: t.targetId } }); t.banners = s }), M()({ url: 'https://autumnfish.cn/personalized', method: 'get', params: { limit: 10 } }).then(function(a) { var s = a.data.result.map(function(t) { return { picUrl: t.picUrl, name: t.name, id: t.id, copywriter: t.copywriter } }); t.list = s }), M()({ url: 'https://autumnfish.cn/personalized/newsong', method: 'get' }).then(function(a) { var s = a.data.result.map(function(t) { return { picUrl: t.picUrl, name: t.name, artists: t.song.artists, id: t.id } }); t.news = s }), M()({ url: 'https://autumnfish.cn/personalized/mv', method: 'get' }).then(function(a) { var s = a.data.result.map(function(t) { return { picUrl: t.picUrl, copywriter: t.copywriter, id: t.id, playCount: t.playCount, artists: t.artists } }); t.mvs = s }) } }; var z = I; var O = (s('d160'), Object(u.a)(z, x, $, !1, null, null, null)); var N = O.exports; var T = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'recommand-container' }, [s('div', { staticClass: 'top-card' }, [s('div', { staticClass: 'icon-wrap' }, [s('img', { attrs: { src: t.topshow.coverImgUrl, alt: '' } })]), s('div', { staticClass: 'content-wrap' }, [s('div', { staticClass: 'tag' }, [t._v('精品歌单')]), s('div', { staticClass: 'title' }, [t._v(' ' + t._s(t.topshow.name) + ' ')]), s('div', { staticClass: 'info' }, [t._v(' ' + t._s(t.topshow.description) + ' ')])]), s('img', { staticClass: 'bg', attrs: { src: t.topshow.coverImgUrl, alt: '' } }), s('div', { staticClass: 'bg-mask' })]), s('div', { staticClass: 'tab-container' }, [s('div', { staticClass: 'tab-bar' }, [s('span', { staticClass: 'item', class: { active: t.tag === '全部' }, on: { click: function(a) { t.tag = '全部' } } }, [t._v('全部')]), s('span', { staticClass: 'item', class: { active: t.tag === '欧美' }, on: { click: function(a) { t.tag = '欧美' } } }, [t._v('欧美')]), s('span', { staticClass: 'item', class: { active: t.tag === '华语' }, on: { click: function(a) { t.tag = '华语' } } }, [t._v('华语')]), s('span', { staticClass: 'item', class: { active: t.tag === '流行' }, on: { click: function(a) { t.tag = '流行' } } }, [t._v('流行')]), s('span', { staticClass: 'item', class: { active: t.tag === '说唱' }, on: { click: function(a) { t.tag = '说唱' } } }, [t._v('说唱')]), s('span', { staticClass: 'item', class: { active: t.tag === '摇滚' }, on: { click: function(a) { t.tag = '摇滚' } } }, [t._v('摇滚')]), s('span', { staticClass: 'item', class: { active: t.tag === '民谣' }, on: { click: function(a) { t.tag = '民谣' } } }, [t._v('民谣')]), s('span', { staticClass: 'item', class: { active: t.tag === '电子' }, on: { click: function(a) { t.tag = '电子' } } }, [t._v('电子')]), s('span', { staticClass: 'item', class: { active: t.tag === '轻音乐' }, on: { click: function(a) { t.tag = '轻音乐' } } }, [t._v('轻音乐')]), s('span', { staticClass: 'item', class: { active: t.tag === '影视原声' }, on: { click: function(a) { t.tag = '影视原声' } } }, [t._v('影视原声')]), s('span', { staticClass: 'item', class: { active: t.tag === 'ACG' }, on: { click: function(a) { t.tag = 'ACG' } } }, [t._v('ACG')]), s('span', { staticClass: 'item', class: { active: t.tag === '怀旧' }, on: { click: function(a) { t.tag = '怀旧' } } }, [t._v('怀旧')]), s('span', { staticClass: 'item', class: { active: t.tag === '治愈' }, on: { click: function(a) { t.tag = '治愈' } } }, [t._v('治愈')]), s('span', { staticClass: 'item', class: { active: t.tag === '旅行' }, on: { click: function(a) { t.tag = '旅行' } } }, [t._v('旅行')])]), s('div', { staticClass: 'tab-content' }, [s('div', { staticClass: 'items' }, t._l(t.list, function(a) { return s('div', { key: a.id, staticClass: 'item', on: { click: function(s) { return t.toPlaylist(a.id) } } }, [s('div', { staticClass: 'img-wrap' }, [s('div', { staticClass: 'num-wrap' }, [t._v(' 播放量： '), s('span', { staticClass: 'num' }, [t._v(t._s(a.playCount))])]), s('img', { attrs: { src: a.coverImgUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' } })], 1), s('p', { staticClass: 'name' }, [t._v(t._s(a.description))])]) }), 0)])]), s('el-pagination', { attrs: { background: '', layout: 'prev, pager, next', total: 1e3, 'page-size': 10, 'current-page': t.page }, on: { 'current-change': t.handleCurrentChange } })], 1) }; var R = []; var D = (s('a4d3'), s('e01a'), { data: function() { return { total: 0, page: 1, topshow: {}, list: [], tag: '全部' } }, watch: { tag: function() { this.page = 1, this.topData(), this.listData() } }, created: function() { this.topData(), this.listData() }, methods: { topData: function() { var t = this; M()({ url: 'https://autumnfish.cn/top/playlist/highquality', method: 'get', params: { limit: 1, cat: this.tag } }).then(function(a) { t.topshow = a.data.playlists[0] }) }, listData: function() { var t = this; M()({ url: 'https://autumnfish.cn/top/playlist', method: 'get', params: { limit: 10, offset: 10 * (this.page - 1), cat: this.tag } }).then(function(a) { var s = a.data.playlists.map(function(t) { return { coverImgUrl: t.coverImgUrl, name: t.name, id: t.id, playCount: parseInt(t.playCount / 1e4) + '万', description: t.description } }); t.total = a.data.total, t.list = s }) }, toPlaylist: function(t) { this.$router.push('/playlist?id='.concat(t)) }, handleCurrentChange: function(t) { this.page = t, this.listData() } } }); var j = D; var L = (s('8cb0'), Object(u.a)(j, T, R, !1, null, null, null)); var S = L.exports; var P = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'newmusic-container' }, [s('div', { staticClass: 'tab-bar' }, [s('span', { staticClass: 'item', class: { active: t.type == 0 }, on: { click: function(a) { t.type = 0 } } }, [t._v('全部')]), s('span', { staticClass: 'item', class: { active: t.type == 7 }, on: { click: function(a) { t.type = 7 } } }, [t._v('华语')]), s('span', { staticClass: 'item', class: { active: t.type == 96 }, on: { click: function(a) { t.type = 96 } } }, [t._v('欧美')]), s('span', { staticClass: 'item', class: { active: t.type == 8 }, on: { click: function(a) { t.type = 8 } } }, [t._v('日本')]), s('span', { staticClass: 'item', class: { active: t.type == 16 }, on: { click: function(a) { t.type = 16 } } }, [t._v('韩国')])]), s('table', { staticClass: 'el-table playlist-table' }, [t._m(0), s('tbody', t._l(t.songList, function(a, i) { return s('tr', { key: a.id, staticClass: 'el-table__row' }, [s('td', [t._v(t._s(i + 1))]), s('td', [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.picUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '25px', h: '25px' }, nativeOn: { click: function(s) { return t.playMusic(a.id) } } })], 1)]), s('td', [s('div', { staticClass: 'song-wrap' }, [s('div', { staticClass: 'name-wrap' }, [s('span', [t._v(t._s(a.songname))]), s('icon', { staticClass: 'playmv', attrs: { name: 'playmv', w: '16px', h: '16px' }, nativeOn: { click: function(s) { return t.toMv(a.mvid) } } })], 1), s('span', [t._v(t._s(a.description))])])]), s('td', [t._v(t._s(a.artists))]), s('td', [t._v(t._s(a.albumname))]), s('td', [t._v(t._s(a.duration))])]) }), 0)])]) }; var q = [function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('thead', [s('th'), s('th'), s('th', [t._v('音乐标题')]), s('th', [t._v('歌手')]), s('th', [t._v('专辑')]), s('th', [t._v('时长')])]) }]; var V = (s('fb6a'), s('99af'), { data: function() { return { type: 0, songList: [] } }, methods: { songData: function() { var t = this; M()({ url: 'https://autumnfish.cn/top/song', method: 'get', params: { type: this.type } }).then(function(a) { console.log(a.data); var s = a.data.data.slice(0, 10).map(function(a) { return { mp3Url: a.mp3Url, duration: t.songTime(a.duration), picUrl: a.album.picUrl, songname: a.name, albumname: a.album.name, id: a.id, artists: a.album.artists[0].name, description: a.album.description, mvid: a.album.id } }); t.songList = s }) }, songTime: function(t) { var a = parseInt(t / 6e4); a < 10 && (a = '0' + a); var s = parseInt(t / 1e3 % 60); return s < 10 && (s = '0' + s), ''.concat(a, ':').concat(s) }, playMusic: function(t) { var a = this; M()({ url: 'https://autumnfish.cn/song/url', method: 'get', params: { id: t } }).then(function(t) { var s = t.data.data[0].url; a.$parent.musicUrl = s }) }, toMv: function(t) { this.$router.push('/mv?id='.concat(t)) } }, watch: { type: function() { this.songData() } }, created: function() { this.songData() } }); var E = V; var H = (s('fc4f'), Object(u.a)(E, P, q, !1, null, null, null)); var B = H.exports; var A = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'newmv-container' }, [s('div', { staticClass: 'filter-wrap' }, [s('div', { staticClass: 'section-wrap' }, [s('span', { staticClass: 'section-type' }, [t._v('地区:')]), s('ul', { staticClass: 'tabs-wrap' }, [s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.area === '全部' }, on: { click: function(a) { t.area = '全部' } } }, [t._v('全部')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.area === '内地' }, on: { click: function(a) { t.area = '内地' } } }, [t._v('内地')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.area === '港台' }, on: { click: function(a) { t.area = '港台' } } }, [t._v('港台')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.area === '欧美' }, on: { click: function(a) { t.area = '欧美' } } }, [t._v('欧美')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.area === '日本' }, on: { click: function(a) { t.area = '日本' } } }, [t._v('日本')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.area === '韩国' }, on: { click: function(a) { t.area = '韩国' } } }, [t._v('韩国')])])])]), s('div', { staticClass: 'type-wrap' }, [s('span', { staticClass: 'type-type' }, [t._v('类型:')]), s('ul', { staticClass: 'tabs-wrap' }, [s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.type === '全部' }, on: { click: function(a) { t.type = '全部' } } }, [t._v('全部')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.type === '官方版' }, on: { click: function(a) { t.type = '官方版' } } }, [t._v('官方版')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.type === '原声' }, on: { click: function(a) { t.type = '原声' } } }, [t._v('原声')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.type === '现场版' }, on: { click: function(a) { t.type = '现场版' } } }, [t._v('现场版')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.type === '网易出品' }, on: { click: function(a) { t.type = '网易出品' } } }, [t._v('网易出品')])])])]), s('div', { staticClass: 'order-wrap' }, [s('span', { staticClass: 'order-type' }, [t._v('排序:')]), s('ul', { staticClass: 'tabs-wrap' }, [s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.order === '上升最快' }, on: { click: function(a) { t.order = '上升最快' } } }, [t._v('上升最快')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.order === '最热' }, on: { click: function(a) { t.order = '最热' } } }, [t._v('最热')])]), s('li', { staticClass: 'tab' }, [s('span', { staticClass: 'title', class: { active: t.order === '最新' }, on: { click: function(a) { t.order = '最新' } } }, [t._v('最新')])])])])]), s('div', { staticClass: 'mvs' }, [s('div', { staticClass: 'items' }, t._l(t.list, function(a) { return s('div', { key: a.id, staticClass: 'item', on: { click: function(s) { return t.toMv(a.id) } } }, [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.cover, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' } }), s('div', { staticClass: 'num-wrap' }, [s('icon', { staticClass: 'playcount', attrs: { name: 'playcount', w: '15px', h: '15px' } }), s('div', { staticClass: 'num' }, [t._v(t._s(a.playCount))])], 1)], 1), s('div', { staticClass: 'info-wrap' }, [s('div', { staticClass: 'name' }, [t._v(t._s(a.name))]), s('div', { staticClass: 'singer' }, [t._v(t._s(a.artistName))])])]) }), 0), s('el-pagination', { attrs: { background: '', layout: 'prev, pager, next', total: t.total, 'page-size': 12, 'current-page': t.page }, on: { 'current-change': t.handleCurrentChange } })], 1)]) }; var F = []; var G = { data: function() { return { total: 0, page: 1, list: [], type: '全部', area: '全部', order: '上升最快' } }, watch: { type: function() { this.page = 1, this.listData() }, area: function() { this.page = 1, this.listData() }, order: function() { this.page = 1, this.listData() } }, methods: { handleCurrentChange: function(t) { this.page = t, this.listData() }, listData: function() { var t = this; M()({ url: 'https://autumnfish.cn/mv/all', method: 'get', params: { limit: 12, area: this.area, order: this.order, type: this.type, offset: 12 * (this.page - 1) } }).then(function(a) { var s = a.data.data.map(function(t) { return { cover: t.cover, name: t.name, id: t.id, playCount: t.playCount, artistName: t.artistName } }); a.data.count && (t.total = a.data.count), t.list = s }) }, toMv: function(t) { this.$router.push('/mv?id='.concat(t)) } }, created: function() { this.listData() } }; var J = G; var Y = (s('28d7'), Object(u.a)(J, A, F, !1, null, null, null)); var Z = Y.exports; var K = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'result-container' }, [s('div', { staticClass: 'title-wrap' }, [s('h2', { staticClass: 'title' }, [t._v(t._s(t.$route.query.keywords))]), s('span', { staticClass: 'sub-title' }, [t._v(' 找到' + t._s(t.count) + '个结果 ')])]), s('el-tabs', { model: { value: t.activeName, callback: function(a) { t.activeName = a }, expression: 'activeName' } }, [s('el-tab-pane', { attrs: { label: '歌曲', name: 'songs' } }, [s('table', { staticClass: 'el-table' }, [s('thead', [s('th'), s('th', [t._v('音乐标题')]), s('th', [t._v('歌手')]), s('th', [t._v('专辑')]), s('th', [t._v('时长')])]), s('tbody', t._l(t.list, function(a, i) { return s('tr', { key: a.id, staticClass: 'el-table__row', on: { dblclick: function(s) { return t.playMusic(a.id) } } }, [s('td', [t._v(t._s(i + 1))]), s('td', [s('div', { staticClass: 'song-wrap' }, [s('div', { staticClass: 'name-wrap' }, [s('span', { staticClass: 'name' }, [t._v(t._s(a.name))]), a.mvid != 0 ? s('icon', { staticClass: 'playmv', attrs: { name: 'playmv', w: '16px', h: '16px' } }) : t._e()], 1), a.alias.length != 0 ? s('span', { staticClass: 'suv-name' }, [t._v(' ' + t._s(a.alias[0]) + ' ')]) : t._e()])]), s('td', [t._v(t._s(a.artist))]), s('td', [t._v(t._s(a.album.name))]), s('td', [t._v(t._s(a.duration))])]) }), 0)])]), s('el-tab-pane', { attrs: { label: '歌单', name: 'lists' } }, [s('div', { staticClass: 'items' }, t._l(t.playlists, function(a) { return s('div', { key: a.id, staticClass: 'item', on: { click: function(s) { return t.toPlaylist(a.id) } } }, [s('div', { staticClass: 'img-wrap' }, [s('div', { staticClass: 'num-wrap' }, [t._v(' 播放量： '), s('span', { staticClass: 'num' }, [t._v(t._s(a.playCount))])]), s('img', { attrs: { src: a.coverImgUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' } })], 1), s('p', { staticClass: 'name' }, [t._v(t._s(a.name))])]) }), 0)]), s('el-tab-pane', { attrs: { label: 'MV', name: 'mvs' } }, [s('div', { staticClass: 'items mv' }, t._l(t.mvs, function(a) { return s('div', { key: a.id, staticClass: 'item', on: { click: function(s) { return t.toMv(a.id) } } }, [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.cover, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' } }), s('div', { staticClass: 'num-wrap' }, [s('icon', { staticClass: 'playcount', attrs: { name: 'playcount', w: '12px', h: '12px' } }), s('div', { staticClass: 'num' }, [t._v(t._s(a.playCount))])], 1), s('span', { staticClass: 'time' }, [t._v(t._s(a.duration))])], 1), s('div', { staticClass: 'info-wrap' }, [s('div', { staticClass: 'name' }, [t._v(t._s(a.name))]), s('div', { staticClass: 'singer' }, [t._v(t._s(a.artistName))])])]) }), 0)])], 1), s('el-pagination', { attrs: { background: '', layout: 'prev, pager, next', total: t.count, 'page-size': t.limit, 'current-page': t.page }, on: { 'current-change': t.handleCurrentChange } })], 1) }; var Q = []; var W = { data: function() { return { activeName: 'songs', type: 1, list: [], playlists: [], mvs: [], count: 0, limit: 15, page: 1 } }, methods: { songTime: function(t) { var a = parseInt(t / 1e3 / 60); a < 10 && (a = '0' + a); var s = parseInt(t / 1e3 % 60); return s < 10 && (s = '0' + s), ''.concat(a, ':').concat(s) }, songCount: function(t) { return t > 1e4 ? parseInt(t / 1e4) + '万' : t }, playMusic: function(t) { var a = this; M()({ url: 'https://autumnfish.cn/song/url', method: 'get', params: { id: t } }).then(function(t) { var s = t.data.data[0].url; a.$parent.musicUrl = s }) }, handleCurrentChange: function(t) { var a = this; switch (this.page = t, this.activeName) { case 'songs':this.type = 1, this.limit = 15; break; case 'lists':this.type = 1e3, this.limit = 15; break; case 'mvs':this.type = 1004, this.limit = 12; break; default:break }M()({ url: 'https://autumnfish.cn/search', method: 'get', params: { keywords: this.$route.query.keywords, limit: this.limit, offset: (this.page - 1) * this.limit, type: this.type } }).then(function(t) { if (a.type === 1) { var s = t.data.result.songs.map(function(t) { return { name: t.name, id: t.id, artist: t.artists[0].name, album: t.album, alias: t.alias, duration: a.songTime(t.duration), mvid: t.mvid } }); a.count = t.data.result.songCount, a.list = s } if (a.type === 1e3) { var i = t.data.result.playlists.map(function(t) { return { id: t.id, coverImgUrl: t.coverImgUrl, playCount: a.songCount(t.playCount), name: t.name } }); a.count = t.data.result.playlistCount, a.playlists = i } if (a.type === 1004) { var n = t.data.result.mvs.map(function(t) { return { id: t.id, cover: t.cover, name: t.name, artistName: t.artistName, playCount: a.songCount(t.playCount), duration: a.songTime(t.duration) } }); a.count = t.data.result.mvCount, a.mvs = n } }) }, toPlaylist: function(t) { this.$router.push('/playlist?id='.concat(t)) }, toMv: function(t) { this.$router.push('/mv?id='.concat(t)) } }, watch: { activeName: function() { var t = this; switch (this.page = 1, this.activeName) { case 'songs':this.type = 1, this.limit = 15; break; case 'lists':this.type = 1e3, this.limit = 15; break; case 'mvs':this.type = 1004, this.limit = 12; break; default:break }M()({ url: 'https://autumnfish.cn/search', method: 'get', params: { keywords: this.$route.query.keywords, limit: this.limit, offset: (this.page - 1) * this.limit, type: this.type } }).then(function(a) { if (t.type === 1) { var s = a.data.result.songs.map(function(a) { return { name: a.name, id: a.id, artist: a.artists[0].name, album: a.album, alias: a.alias, duration: t.songTime(a.duration), mvid: a.mvid } }); t.count = a.data.result.songCount, t.list = s } if (t.type === 1e3) { var i = a.data.result.playlists.map(function(a) { return { id: a.id, coverImgUrl: a.coverImgUrl, playCount: t.songCount(a.playCount), name: a.name } }); t.count = a.data.result.playlistCount, t.playlists = i } if (t.type === 1004) { var n = a.data.result.mvs.map(function(a) { return { id: a.id, cover: a.cover, name: a.name, artistName: a.artistName, playCount: t.songCount(a.playCount), duration: t.songTime(a.duration) } }); t.count = a.data.result.mvCount, t.mvs = n } }) } }, created: function() { var t = this; M()({ url: 'https://autumnfish.cn/search', method: 'get', params: { keywords: this.$route.query.keywords, limit: this.limit, offset: (this.page - 1) * this.limit, type: 1 } }).then(function(a) { var s = a.data.result.songs.map(function(a) { return { name: a.name, id: a.id, artist: a.artists[0].name, album: a.album, alias: a.alias, duration: t.songTime(a.duration), mvid: a.mvid } }); t.count = a.data.result.songCount, t.list = s }) } }; var X = W; var tt = (s('60d7'), Object(u.a)(X, K, Q, !1, null, null, null)); var at = tt.exports; var st = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'playlist-container' }, [s('div', { staticClass: 'top-wrap' }, [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: t.playlist.coverImgUrl, alt: '' } })]), s('div', { staticClass: 'info-wrap' }, [s('p', { staticClass: 'title' }, [t._v(t._s(t.playlist.name))]), s('div', { staticClass: 'author-wrap' }, [s('img', { attrs: { src: t.playlist.avatarUrl, alt: '' } }), s('span', { staticClass: 'name' }, [t._v(t._s(t.playlist.nickname))]), s('span', { staticClass: 'time' }, [t._v('创建于 ' + t._s(t.playlist.createTime))])]), s('div', { staticClass: 'tag-wrap' }, [s('span', { staticClass: 'title' }, [t._v('标签:')]), s('ul', t._l(t.playlist.tags, function(a, i) { return s('li', { key: i }, [t._v(t._s(a))]) }), 0)]), s('div', { staticClass: 'desc-wrap' }, [s('span', { staticClass: 'title' }, [t._v('简介:')]), s('span', { staticClass: 'desc' }, [t._v(t._s(t.playlist.description))])])])]), s('el-tabs', { model: { value: t.activeName, callback: function(a) { t.activeName = a }, expression: 'activeName' } }, [s('el-tab-pane', { attrs: { label: '歌曲列表', name: 'songlist' } }, [s('table', { staticClass: 'el-table' }, [s('thead', [s('th'), s('th'), s('th', [t._v('音乐标题')]), s('th', [t._v('歌手')]), s('th', [t._v('专辑')]), s('th', [t._v('时长')])]), s('tbody', t._l(t.playlist.tracks, function(a, i) { return s('tr', { key: a.id, staticClass: 'el-table__row' }, [s('td', [t._v(t._s(i + 1))]), s('td', [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.al.picUrl, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '25px', h: '25px' }, nativeOn: { click: function(s) { return t.playMusic(a.id) } } })], 1)]), s('td', [s('div', { staticClass: 'song-wrap' }, [s('div', { staticClass: 'name-wrap' }, [s('span', [t._v(t._s(a.name))])]), s('span', [t._v('副标题')])])]), s('td', [t._v(t._s(a.ar[0].name))]), s('td', [t._v(t._s(a.al.name))]), s('td', [t._v(t._s(a.dt))])]) }), 0)])]), s('el-tab-pane', { attrs: { label: '评论（' + (t.total + t.hotComment.length) + '）', name: 'command' } }, [s('div', { staticClass: 'comment-wrap' }, [s('p', { staticClass: 'title' }, [t._v(' 热门评论: '), s('span', { staticClass: 'number' }, [t._v('（' + t._s(t.hotComment.length) + '）')])]), s('div', { staticClass: 'comments-wrap' }, t._l(t.hotComment, function(a) { return s('div', { key: a.id, staticClass: 'item' }, [s('div', { staticClass: 'icon-wrap' }, [s('img', { attrs: { src: a.avatarUrl, alt: '' } })]), s('div', { staticClass: 'content-wrap' }, [s('div', { staticClass: 'content' }, [s('span', { staticClass: 'name' }, [t._v(t._s(a.name) + '：')]), s('span', { staticClass: 'comment' }, [t._v(' ' + t._s(a.content) + ' ')])]), a.beReplied.length != 0 ? s('div', { staticClass: 're-content' }, [s('span', { staticClass: 'name' }, [t._v(' ' + t._s(a.beReplied[0].user.nickname) + ' ')]), s('span', { staticClass: 'comment' }, [t._v(' ' + t._s(a.beReplied[0].content) + ' ')])]) : t._e(), s('div', { staticClass: 'date' }, [t._v(t._s(a.time))])])]) }), 0)]), s('div', { staticClass: 'comment-wrap' }, [s('p', { staticClass: 'title' }, [t._v(' 最新评论: '), s('span', { staticClass: 'number' }, [t._v('（' + t._s(t.total) + '）')])]), s('div', { staticClass: 'comments-wrap' }, t._l(t.comment, function(a) { return s('div', { key: a.id, staticClass: 'item' }, [s('div', { staticClass: 'icon-wrap' }, [s('img', { attrs: { src: a.avatarUrl, alt: '' } })]), s('div', { staticClass: 'content-wrap' }, [s('div', { staticClass: 'content' }, [s('span', { staticClass: 'name' }, [t._v(t._s(a.name) + '：')]), s('span', { staticClass: 'comment' }, [t._v(' ' + t._s(a.content) + ' ')])]), a.beReplied.length != 0 ? s('div', { staticClass: 're-content' }, [s('span', { staticClass: 'name' }, [t._v(' ' + t._s(a.beReplied[0].user.nickname) + ' ')]), s('span', { staticClass: 'comment' }, [t._v(' ' + t._s(a.beReplied[0].content) + ' ')])]) : t._e(), s('div', { staticClass: 'date' }, [t._v(t._s(a.time))])])]) }), 0)]), s('el-pagination', { attrs: { background: '', layout: 'prev, pager, next', total: t.total, 'page-size': 5, 'current-page': t.page }, on: { 'current-change': t.handleCurrentChange } })], 1)], 1)], 1) }; var it = []; var nt = { data: function() { return { activeName: 'songlist', total: 1e3, page: 1, playlist: {}, hotComment: [], comment: [] } }, methods: { songTime: function(t) { var a = parseInt(t / 1e3 / 60); a < 10 && (a = '0' + a); var s = parseInt(t / 1e3 % 60); return s < 10 && (s = '0' + s), ''.concat(a, ':').concat(s) }, dateTime: function(t) { var a = new Date(t); var s = a.getFullYear(); var i = a.getMonth() + 1; i = i < 10 ? '0' + i : i; var n = a.getDate(); n = n < 10 ? '0' + n : n; var e = a.getHours(); e = e < 10 ? '0' + e : e; var c = a.getMinutes(); var l = a.getSeconds(); return c = c < 10 ? '0' + c : c, l = l < 10 ? '0' + l : l, s + '-' + i + '-' + n + '  ' + e + ':' + c }, playMusic: function(t) { var a = this; M()({ url: 'https://autumnfish.cn/song/url', method: 'get', params: { id: t } }).then(function(t) { var s = t.data.data[0].url; a.$parent.musicUrl = s }) }, handleCurrentChange: function(t) { var a = this; this.page = t, M()({ url: 'https://autumnfish.cn/comment/playlist', method: 'get', params: { id: this.$route.query.id, limit: 5, offset: 5 * (this.page - 1) } }).then(function(t) { var s = t.data.comments.map(function(t) { return { avatarUrl: t.user.avatarUrl, id: t.commentId, content: t.content, name: t.user.nickname, time: a.dateTime(t.time), beReplied: t.beReplied } }); a.comment = s }) } }, created: function() { var t = this; M()({ url: 'https://autumnfish.cn/playlist/detail', method: 'get', params: { id: this.$route.query.id } }).then(function(a) { t.playlist = a.data.playlist, t.playlist.tracks.map(function(a) { return a.dt = t.songTime(a.dt), a }), t.playlist.nickname = t.playlist.creator.nickname, t.playlist.avatarUrl = t.playlist.creator.avatarUrl, t.playlist.createTime = t.dateTime(t.playlist.createTime) }), M()({ url: 'https://autumnfish.cn/comment/hot', method: 'get', params: { id: this.$route.query.id, type: 2, limit: 5, offset: 5 * (this.page - 1) } }).then(function(a) { var s = a.data.hotComments.map(function(a) { return { avatarUrl: a.user.avatarUrl, id: a.commentId, content: a.content, name: a.user.nickname, time: t.dateTime(a.time), beReplied: a.beReplied } }); t.hotComment = s }), M()({ url: 'https://autumnfish.cn/comment/playlist', method: 'get', params: { id: this.$route.query.id, limit: 5, offset: 5 * (this.page - 1) } }).then(function(a) { var s = a.data.comments.map(function(a) { return { avatarUrl: a.user.avatarUrl, id: a.commentId, content: a.content, name: a.user.nickname, time: t.dateTime(a.time), beReplied: a.beReplied } }); t.comment = s, t.total = a.data.total }) } }; var et = nt; var ct = (s('38c7'), Object(u.a)(et, st, it, !1, null, null, null)); var lt = ct.exports; var rt = function() { var t = this; var a = t.$createElement; var s = t._self._c || a; return s('div', { staticClass: 'mv-container' }, [s('div', { staticClass: 'mv-wrap' }, [s('h3', { staticClass: 'title' }, [t._v(' MV详情 ')]), s('div', { staticClass: 'video-wrap' }, [s('video', { attrs: { controls: '', src: t.mvUrl } })]), s('div', { staticClass: 'info-wrap' }, [s('div', { staticClass: 'singer-info' }, [s('div', { staticClass: 'avatar-wrap' }, [s('img', { attrs: { src: t.mvInfo.artistPic, alt: '' } })]), s('span', { staticClass: 'name' }, [t._v(t._s(t.mvInfo.artistName))])]), s('div', { staticClass: 'mv-info' }, [s('h2', { staticClass: 'title' }, [t._v(t._s(t.mvInfo.name))]), s('span', { staticClass: 'date' }, [t._v('发布于 ' + t._s(t.mvInfo.publishTime))]), s('span', { staticClass: 'number' }, [t._v('播放：' + t._s(t.mvInfo.playCount) + '次')]), s('p', { staticClass: 'desc' }, [t._v(t._s(t.mvInfo.desc))])])]), t.page === 1 ? s('div', { staticClass: 'comment-wrap' }, [s('p', { staticClass: 'title' }, [t._v(' 热门评论： '), s('span', { staticClass: 'number' }, [t._v('（' + t._s(t.hotComments.length) + '）')])]), t._l(t.hotComments, function(a) { return s('div', { key: a.id, staticClass: 'comments-wrap' }, [s('div', { staticClass: 'item' }, [s('div', { staticClass: 'icon-wrap' }, [s('img', { attrs: { src: a.avatarUrl, alt: '' } })]), s('div', { staticClass: 'content-wrap' }, [s('div', { staticClass: 'content' }, [s('span', { staticClass: 'name' }, [t._v(t._s(a.nickname) + ':')]), s('span', { staticClass: 'comment' }, [t._v(t._s(a.content))])]), a.beReplied.length != 0 ? s('div', { staticClass: 're-content' }, [s('span', { staticClass: 'name' }, [t._v(' ' + t._s(a.beReplied[0].user.nickname) + ': ')]), s('span', { staticClass: 'comment' }, [t._v(' ' + t._s(a.beReplied[0].content) + ' ')])]) : t._e(), s('div', { staticClass: 'date' }, [t._v(' ' + t._s(a.time) + ' ')])])])]) })], 2) : t._e(), s('div', { staticClass: 'comment-wrap' }, [s('p', { staticClass: 'title' }, [t._v(' 最新评论： '), s('span', { staticClass: 'number' }, [t._v('（' + t._s(t.total) + '）')])]), t._l(t.comments, function(a) { return s('div', { key: a.id, staticClass: 'comments-wrap' }, [s('div', { staticClass: 'item' }, [s('div', { staticClass: 'icon-wrap' }, [s('img', { attrs: { src: a.avatarUrl, alt: '' } })]), s('div', { staticClass: 'content-wrap' }, [s('div', { staticClass: 'content' }, [s('span', { staticClass: 'name' }, [t._v(t._s(a.nickname) + ':')]), s('span', { staticClass: 'comment' }, [t._v(t._s(a.content))])]), a.beReplied.length != 0 ? s('div', { staticClass: 're-content' }, [s('span', { staticClass: 'name' }, [t._v(' ' + t._s(a.beReplied[0].user.nickname) + ': ')]), s('span', { staticClass: 'comment' }, [t._v(' ' + t._s(a.beReplied[0].content) + ' ')])]) : t._e(), s('div', { staticClass: 'date' }, [t._v(' ' + t._s(a.time) + ' ')])])])]) })], 2), s('el-pagination', { attrs: { background: '', layout: 'prev, pager, next', total: t.total, 'page-size': t.limit, 'current-page': t.page }, on: { 'current-change': t.handleCurrentChange } })], 1), s('div', { staticClass: 'mv-recommend' }, [s('h3', { staticClass: 'title' }, [t._v(' 相关推荐 ')]), s('div', { staticClass: 'mvs' }, [s('div', { staticClass: 'items' }, t._l(t.mvs, function(a) { return s('div', { key: a.id, staticClass: 'item' }, [s('div', { staticClass: 'img-wrap' }, [s('img', { attrs: { src: a.cover, alt: '' } }), s('icon', { staticClass: 'play', attrs: { name: 'play', w: '40px', h: '40px' } }), s('div', { staticClass: 'num-wrap' }, [s('icon', { staticClass: 'playcount', attrs: { name: 'playcount', w: '12px', h: '12px' } }), s('div', { staticClass: 'num' }, [t._v(t._s(a.playCount))])], 1), s('span', { staticClass: 'time' }, [t._v(' ' + t._s(a.duration) + ' ')])], 1), s('div', { staticClass: 'info-wrap' }, [s('div', { staticClass: 'name' }, [t._v(' ' + t._s(a.name) + ' ')]), s('div', { staticClass: 'singer' }, [t._v(' ' + t._s(a.artistName) + ' ')])])]) }), 0)])])]) }; var ot = []; var ut = { data: function() { return { total: 0, page: 1, limit: 6, mvUrl: '', mvInfo: {}, mvs: [], hotComments: [], comments: [] } }, methods: { songTime: function(t) { var a = parseInt(t / 1e3 / 60); a < 10 && (a = '0' + a); var s = parseInt(t / 1e3 % 60); return s < 10 && (s = '0' + s), ''.concat(a, ':').concat(s) }, songCount: function(t) { return t > 1e4 ? parseInt(t / 1e4) + '万' : t }, dateTime: function(t) { var a = new Date(t); var s = a.getFullYear(); var i = a.getMonth() + 1; i = i < 10 ? '0' + i : i; var n = a.getDate(); n = n < 10 ? '0' + n : n; var e = a.getHours(); e = e < 10 ? '0' + e : e; var c = a.getMinutes(); var l = a.getSeconds(); return c = c < 10 ? '0' + c : c, l = l < 10 ? '0' + l : l, s + '-' + i + '-' + n + '  ' + e + ':' + c }, handleCurrentChange: function(t) { var a = this; this.page = t, M()({ url: 'https://autumnfish.cn/comment/mv', method: 'get', params: { id: this.$route.query.id, limit: this.limit, offset: 5 * (this.page - 1) } }).then(function(t) { var s = t.data.comments.map(function(t) { return { id: t.commentId, content: t.content, beReplied: t.beReplied, time: a.dateTime(t.time), nickname: t.user.nickname, avatarUrl: t.user.avatarUrl } }); a.comments = s, a.total = t.data.total }) } }, created: function() { var t = this; M()({ url: 'https://autumnfish.cn/mv/url', method: 'get', params: { id: this.$route.query.id } }).then(function(a) { t.mvUrl = a.data.data.url }), M()({ url: 'https://autumnfish.cn/mv/detail', method: 'get', params: { mvid: this.$route.query.id } }).then(function(a) { var s = a.data.data; t.mvInfo = { name: s.name, desc: s.desc, artistName: s.artistName, artistId: s.artistId, playCount: t.songCount(s.playCount), publishTime: s.publishTime, artistPic: '' }, M()({ url: 'https://autumnfish.cn/artists', method: 'get', params: { id: s.artistId } }).then(function(a) { t.mvInfo.artistPic = a.data.artist.picUrl }) }), M()({ url: 'https://autumnfish.cn/simi/mv', method: 'get', params: { mvid: this.$route.query.id } }).then(function(a) { var s = a.data.mvs.map(function(a) { return { artistName: a.artistName, playCount: t.songCount(a.playCount), cover: a.cover, duration: t.songTime(a.duration), name: a.name, id: a.id } }); t.mvs = s }), M()({ url: 'https://autumnfish.cn/comment/mv', method: 'get', params: { id: this.$route.query.id, limit: this.limit, offset: 0 } }).then(function(a) { var s = a.data.hotComments.map(function(a) { return { id: a.commentId, content: a.content, beReplied: a.beReplied, time: t.dateTime(a.time), nickname: a.user.nickname, avatarUrl: a.user.avatarUrl } }); t.hotComments = s; var i = a.data.comments.map(function(a) { return { id: a.commentId, content: a.content, beReplied: a.beReplied, time: t.dateTime(a.time), nickname: a.user.nickname, avatarUrl: a.user.avatarUrl } }); t.comments = i, t.total = a.data.total }) } }; var pt = ut; var mt = (s('3a5b'), Object(u.a)(pt, rt, ot, !1, null, null, null)); var dt = mt.exports; i.default.use(k.a); var vt = [{ path: '/discovery', component: N }, { path: '/recommand', component: S }, { path: '/newmusic', component: B }, { path: '/newmv', component: Z }, { path: '/result', component: at }, { path: '/playlist', component: lt }, { path: '/mv', component: dt }, { path: '*', redirect: '/discovery' }]; var ht = new k.a({ mode: 'history', base: '/', routes: vt }); var ft = ht; var Ct = s('2f62'); i.default.use(Ct.a); var gt = new Ct.a.Store({ state: {}, mutations: {}, actions: {}, modules: {} }); var _t = s('2763'); var yt = s.n(_t); var wt = (s('ac2a'), s('63c2')); i.default.component('icon', wt.a), i.default.use(yt.a), i.default.config.productionTip = !1, new i.default({ router: ft, store: gt, render: function(t) { return t(b) } }).$mount('#app') }, '5ac7': function(t, a, s) {}, '5c0b': function(t, a, s) { 'use strict'; s('9c0c') }, '60d7': function(t, a, s) { 'use strict'; s('24ac') }, 6426: function(t, a) { t.exports = { svg: { $: { t: '1619531902035', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '5728', width: '200', height: '200' }, path: [{ $: { d: 'M511.980924 0C229.220134 0 0.025435 229.232852 0.025435 512.006359s229.194699 511.993641 511.955489 511.993641S1023.974565 794.843453 1023.974565 512.006359 794.932476 0 511.980924 0z m0 970.599237c-118.577926 0.15261-226.307828-45.325153-307.674363-119.137495C252.175213 727.771383 371.376296 639.410226 511.980924 639.410226s259.792993 88.208547 307.763385 211.911624c-81.455557 73.952235-189.198177 119.277388-307.763385 119.277387z m-108.09871-426.837293a152.82614 152.82614 0 0 1-44.765583-108.098709 152.838858 152.838858 0 1 1 44.765583 108.098709z m454.396105 268.529913C813.245669 713.960183 728.737913 637.858692 624.136514 605.657994a203.861449 203.861449 0 1 0-224.298463 0.114457c-104.614116 32.213415-189.121872 108.314907-234.154523 206.633863a455.807747 455.807747 0 0 1-112.448093-300.260063C53.235435 258.775593 258.597548 53.41348 511.980924 53.41348s458.745489 205.336678 458.745488 458.732771c0 114.826265-42.616327 219.618425-112.448093 300.145606z', 'p-id': '5729' } }] } } }, '7b8f': function(t, a) { t.exports = { svg: { $: { t: '1619598334811', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '1817', width: '200', height: '200' }, path: [{ $: { d: 'M923.7 338.1c-22.6-53.4-54.9-101.3-96.1-142.5-41.2-41.2-89.1-73.5-142.5-96.1-55.3-23.4-114-35.2-174.5-35.2S391.4 76.2 336.1 99.5c-53.4 22.6-101.3 54.9-142.5 96.1-41.2 41.2-73.5 89.1-96.1 142.5-23.4 55.3-35.2 114-35.2 174.5s11.9 119.2 35.2 174.5c22.6 53.4 54.9 101.3 96.1 142.5 41.2 41.2 89.1 73.5 142.5 96.1 55.3 23.4 114 35.2 174.5 35.2s119.2-11.9 174.5-35.2c53.4-22.6 101.3-54.9 142.5-96.1 41.2-41.2 73.5-89.1 96.1-142.5 23.4-55.3 35.2-114 35.2-174.5s-11.8-119.2-35.2-174.5zM510.6 880.9c-203.1 0-368.3-165.2-368.3-368.3 0-203.1 165.2-368.3 368.3-368.3s368.3 165.2 368.3 368.3c0 203.1-165.2 368.3-368.3 368.3z', 'p-id': '1818' } }, { $: { d: 'M648.3 373.9c-2.3-1.8-4.6-3.6-6.8-5.6-15-13.3-26.5-30.4-32.8-49.9-1-2.9-1.8-5.8-2.5-8.8-2.1-8.5-3.2-17.5-3.2-26.7 0-20.2 5.3-39.2 14.5-55.6-42.4 8.9-76.1 41.3-86.8 83-0.8 3.1-1.5 6.3-2 9.6v261.8c-5.9-1.9-11.9-3.5-18.2-4.7-10.7-2.2-22-3.5-33.7-3.8-13.5-0.4-27.5 0.6-41.8 3.1-30.4 5.2-57.6 16.4-79.6 31.3-24.8 16.8-42.8 38.5-51.1 62-4.8 13.7-6.4 28-3.9 42.3 10.3 60.3 87.4 97.4 172.1 82.9 20.8-3.6 40.1-9.9 57.3-18.4 23.1-11.4 42.3-26.6 56-43.9 12-15.2 19.7-32.1 21.8-49.4 0.4-3.3 0.6-6.7 0.7-10.1 0.2 0 0.4-254.9 0.4-254.9h-0.2 0.2c2.1-0.1 4.3-0.2 6.4-0.2 27.2 0 52.2 9.5 71.8 25.5 15.8 12.8 28 29.7 35.2 49.2-5-19.8-12.5-38.5-22.3-55.9-13.4-24-30.9-45.2-51.5-62.8z', 'p-id': '1819' } }] } } }, '8cb0': function(t, a, s) { 'use strict'; s('eee6') }, '9a84': function(t, a) { t.exports = { svg: { $: { t: '1619700754401', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '11718', 'data-spm-anchor-id': 'a313x.7781069.0.i67', width: '200', height: '200' }, path: [{ $: { d: 'M897.143467 597.051733l-464.648534 311.5264c-46.976 31.488-110.592 18.944-142.08-28.023466A102.4 102.4 0 0 1 273.066667 823.5264V200.4736c0-56.5504 45.8496-102.4 102.4-102.4a102.4 102.4 0 0 1 57.028266 17.348267l464.64 311.5264c46.976 31.488 59.528533 95.104 28.032 142.08a102.4 102.4 0 0 1-28.023466 28.023466z', 'p-id': '11719', 'data-spm-anchor-id': 'a313x.7781069.0.i65', fill: '#ffffff', class: '' } }] } } }, '9c0c': function(t, a, s) {}, a6f6: function(t, a, s) {}, aa13: function(t, a, s) {}, aeb5: function(t, a, s) {}, b9da: function(t, a, s) {}, bb97: function(t, a) { t.exports = { svg: { $: { t: '1619597853478', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '1209', width: '200', height: '200' }, path: [{ $: { d: 'M938.8 555.5c-12.8-27.7-30.4-52.7-51.7-73.9-2.4-2.2-4.8-4.4-7.1-6.8-15.5-16-26.8-35.9-32.1-58.1-0.9-3.3-1.5-6.6-2-10-1.6-9.6-2.1-19.7-1.3-29.8 1.7-22.4 9.2-43 20.8-60.4-47.7 6.3-87.8 39.3-103.2 84.6-1.1 3.4-2.2 6.9-3 10.5l-22.2 290c-6.4-2.6-12.9-4.9-19.8-6.7-11.7-3.3-24.1-5.7-37-7.1-14.9-1.6-30.5-1.7-46.6-0.1-34.1 3.2-65.2 13.3-90.8 27.9-28.9 16.5-50.7 39-61.9 64.4-6.5 14.8-9.5 30.5-7.9 46.5 6.3 67.7 88.6 115.3 183.6 106.4 23.3-2.2 45.3-7.6 65-15.5 26.6-10.7 49.1-25.9 65.7-43.9 14.6-15.8 24.5-33.9 28.3-52.9 0.7-3.6 1.2-7.4 1.6-11.1 0.2 0 22-282.3 22-282.3 2.3 0.1 4.8 0.1 7.1 0.3 30.1 2.3 57 14.9 77.4 34.3 16.4 15.5 28.5 35.3 34.8 57.5-3.6-22.3-10.3-43.7-19.7-63.8z m-99.5-28.3zM105 169h798.2c22.1 0 40-17.9 40-40s-17.9-40-40-40H105c-22.1 0-40 17.9-40 40s17.9 40 40 40z', 'p-id': '1210' } }, { $: { d: 'M105 551.8h568.2c22.1 0 40-17.9 40-40s-17.9-40-40-40H105c-22.1 0-40 17.9-40 40s17.9 40 40 40zM417.2 854.6H105c-22.1 0-40 17.9-40 40s17.9 40 40 40h312.2c22.1 0 40-17.9 40-40s-17.9-40-40-40z', 'p-id': '1211' } }] } } }, bece: function(t, a, s) { 'use strict'; s('b9da') }, cfbf: function(t, a) { t.exports = { svg: { $: { t: '1619530776942', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '3507', width: '200', height: '200' }, path: [{ $: { d: 'M890.759375 456.9875L580.259375 134.084375a100.74375 100.74375 0 0 0-145.4625 0L124.38125 456.9875c-32.0625 33.75-27.928125 62.184375-22.696875 74.165625a54 54 0 0 0 53.240625 32.0625h45.5625v248.4c0 56.3625 40.5 109.6875 98.128125 109.6875h132.13125V658.221875c0-28.18125-4.21875-43.875 24.553125-43.875h104.45625c28.85625 0 24.553125 15.69375 24.553125 43.875v262.9125h132.215625c57.54375 0 98.128125-53.15625 98.128125-109.6875V563.215625h45.478125a54 54 0 0 0 53.240625-32.0625c5.315625-11.98125 9.45-40.8375-22.6125-74.165625z', fill: '#333333', 'p-id': '3508' } }] } } }, d160: function(t, a, s) { 'use strict'; s('aeb5') }, d25b: function(t, a, s) {}, d632: function(t, a) { t.exports = { svg: { $: { t: '1619789581341', class: 'icon', viewBox: '0 0 1471 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '3856', width: '200', height: '200' }, path: [{ $: { d: 'M933.647059 585.142857c-90.352941 51.630252-180.705882 103.260504-266.756303 159.193277-86.05042 55.932773-129.07563 30.117647-129.07563-73.142857 4.302521-103.260504 4.302521-210.823529 0-314.084033s38.722689-129.07563 129.07563-73.142857 176.403361 107.563025 266.756303 159.193277 90.352941 94.655462 0 141.983193z', fill: '#dd6d60', 'p-id': '3857' } }, { $: { d: 'M512 1024c-137.680672 0-262.453782-51.630252-361.411765-150.588235C51.630252 774.453782 0 649.680672 0 512s51.630252-266.756303 150.588235-361.411765S374.319328 0 507.697479 0h451.764706c137.680672 0 262.453782 51.630252 361.411765 150.588235 94.655462 94.655462 150.588235 223.731092 150.588235 361.411765 0 279.663866-228.033613 512-512 512H512zM507.697479 129.07563c-98.957983 0-197.915966 38.722689-266.756303 111.865546C167.798319 314.084034 129.07563 408.739496 129.07563 512s38.722689 197.915966 111.865546 271.058824c73.142857 73.142857 167.798319 111.865546 271.058824 111.865546h451.764706c210.823529 0 382.92437-172.10084 382.92437-382.92437 0-103.260504-38.722689-197.915966-111.865547-271.058824-77.445378-73.142857-172.10084-111.865546-275.361344-111.865546H507.697479z', fill: '#dd6d60', 'p-id': '3858' } }] } } }, dacb: function(t, a, s) { var i = { './backward.svg': '4ee4', './command.svg': 'bb97', './discovery.svg': '7b8f', './forward.svg': '1e7a', './fullScreen.svg': '36df', './home.svg': 'cfbf', './login.svg': '6426', './newmusic.svg': '212b', './newmv.svg': 'ecb7', './play.svg': 'ede7', './playcount.svg': '9a84', './playmv.svg': 'd632' }; function n(t) { var a = e(t); return s(a) } function e(t) { if (!s.o(i, t)) { var a = new Error("Cannot find module '" + t + "'"); throw a.code = 'MODULE_NOT_FOUND', a } return i[t] }n.keys = function() { return Object.keys(i) }, n.resolve = e, t.exports = n, n.id = 'dacb' }, ecb7: function(t, a) { t.exports = { svg: { $: { t: '1619598178713', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '1359', width: '200', height: '200' }, path: [{ $: { d: 'M919.2 148.4H104.8c-22.1 0-40 17.9-40 40v645c0 22.1 17.9 40 40 40h814.5c22.1 0 40-17.9 40-40v-645c-0.1-22.1-18-40-40.1-40z m-40 645H144.8v-565h734.5v565z', 'p-id': '1360' } }, { $: { d: 'M368.7 687.9c6.2 3.6 13.1 5.4 20 5.4s13.8-1.8 20-5.4l246.6-142.4c12.4-7.1 20-20.4 20-34.6 0-14.3-7.6-27.5-20-34.6L408.7 333.9c-12.4-7.1-27.6-7.1-40 0-12.4 7.1-20 20.4-20 34.6v284.7c0 14.4 7.6 27.6 20 34.7z m60-250.1l126.6 73.1L428.7 584V437.8z', 'p-id': '1361' } }] } } }, ede7: function(t, a) { t.exports = { svg: { $: { t: '1619683713197', class: 'icon', viewBox: '0 0 1024 1024', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', 'p-id': '11406', width: '200', height: '200' }, path: [{ $: { d: 'M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z', fill: '#d5d6d4', 'fill-opacity': '.2', 'p-id': '11407', 'data-spm-anchor-id': 'a313x.7781069.0.i57', class: '' } }, { $: { d: 'M724.002133 542.532267l-299.144533 149.572266A34.133333 34.133333 0 0 1 375.466667 661.5552V362.4448a34.133333 34.133333 0 0 1 49.390933-30.532267l299.144533 149.572267a34.133333 34.133333 0 0 1 0 61.064533z', fill: '#dd6d60', 'p-id': '11408', 'data-spm-anchor-id': 'a313x.7781069.0.i59', class: 'selected' } }] } } }, eee6: function(t, a, s) {}, f678: function(t, a, s) {}, fb97: function(t, a, s) { 'use strict'; s('d25b') }, fc4f: function(t, a, s) { 'use strict'; s('5ac7') } })
// # sourceMappingURL=app.cfd86141.js.map
